{"version":3,"sources":["atoms.tsx","components/SelectToDo.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["TodoCheck","key","DefaultCategory","toDoCheckState","atom","default","TO_DO","toDoState","effects_UNSTABLE","setSelf","onSet","JSON","parse","localStorage","hasOwnProperty","getItem","LoadToDos","newValue","todos","setItem","stringify","SaveToDos","toDoSelector","selector","get","toDos","toDoCheck","filter","todo","check","SelectToDo","useRecoilState","category","setCategory","value","onInput","event","currentTarget","DOING","DONE","Container","styled","div","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","useForm","register","handleSubmit","setValue","style","margin","display","justifyContent","onSubmit","toDo","oldToDos","text","id","Date","now","flexDirection","alignItems","htmlFor","required","ToDo","onClick","name","targetIndex","findIndex","newToDo","slice","fontSize","ToDoList","textAlign","width","height","padding","marginTop","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","cardBgColor","App","ReactDOM","render","StrictMode","accentColor","document","getElementById"],"mappings":"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","file":"static/js/main.23ba86d1.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nconst SaveToDos = (key: string, todos: IToDo[]) => {\r\n  localStorage.setItem(key, JSON.stringify(todos));\r\n};\r\n\r\nconst LoadToDos = (key: string) => {\r\n  return JSON.parse(\r\n    localStorage.hasOwnProperty(key) ? (localStorage.getItem(key) as any) : \"[]\"\r\n  );\r\n};\r\n\r\nconst toDoEffects =\r\n  (key: string) =>\r\n  ({ setSelf, onSet }: any) => {\r\n    setSelf(LoadToDos(key));\r\n    onSet((newValue: IToDo[]) => {\r\n      SaveToDos(key, newValue);\r\n    });\r\n  };\r\n\r\nexport enum TodoCheck {\r\n  \"TO_DO\" = \"TO_DO\",\r\n  \"DOING\" = \"DOING\",\r\n  \"DONE\" = \"DONE\",\r\n}\r\n\r\nexport const DefaultCategory = \"default\";\r\n\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: string;\r\n  check: TodoCheck;\r\n}\r\n\r\nexport const toDoCheckState = atom<TodoCheck>({\r\n  key: \"toDoCheck\",\r\n  default: TodoCheck.TO_DO,\r\n});\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDo\",\r\n  default: [],\r\n  effects_UNSTABLE: [toDoEffects(\"toDo\")],\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const toDoCheck = get(toDoCheckState);\r\n    return toDos.filter((todo) => todo.check === toDoCheck);\r\n  },\r\n});\r\n\r\nexport const categoryState = atom<string>({\r\n  key: \"category\",\r\n  default: DefaultCategory,\r\n});\r\n","import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { TodoCheck, toDoCheckState } from \"../atoms\";\r\n\r\nexport default function SelectToDo() {\r\n  const [category, setCategory] = useRecoilState(toDoCheckState);\r\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\r\n    setCategory(event.currentTarget.value as any);\r\n  };\r\n\r\n  return (\r\n    <select value={category} onInput={onInput}>\r\n      <option value={TodoCheck.TO_DO}>To Do</option>\r\n      <option value={TodoCheck.DOING}>Doing</option>\r\n      <option value={TodoCheck.DONE}>Done</option>\r\n    </select>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { DefaultCategory, toDoCheckState, toDoState } from \"../atoms\";\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n  category: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 2.5px 0px;\r\n`;\r\n\r\nexport default function CreateToDo() {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const check = useRecoilValue(toDoCheckState);\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const handleValid = ({ toDo, category }: IForm) => {\r\n    setToDos((oldToDos) => [\r\n      {\r\n        text: toDo,\r\n        check: check,\r\n        id: Date.now(),\r\n        category: category ? category : DefaultCategory,\r\n      },\r\n      ...oldToDos,\r\n    ]);\r\n    setValue(\"toDo\", \"\");\r\n    setValue(\"category\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"20px 0 10px 0\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <form\r\n        onSubmit={handleSubmit(handleValid)}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n        >\r\n          <Container>\r\n            <label htmlFor=\"toDo\">Write a To Do</label>\r\n            <input\r\n              id=\"toDo\"\r\n              {...register(\"toDo\", {\r\n                required: \"Please write a To Do\",\r\n              })}\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <label htmlFor=\"category\">Write a category</label>\r\n            <input id=\"category\" {...register(\"category\")} />\r\n          </Container>\r\n        </div>\r\n        <button>Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TodoCheck, IToDo, toDoState, DefaultCategory } from \"../atoms\";\r\nimport { useSetRecoilState } from \"recoil\";\r\n\r\nexport default function ToDo({ text, check, id, category }: IToDo) {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const {\r\n      currentTarget: { name },\r\n    } = event;\r\n    setToDos((oldToDos) => {\r\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\r\n      const newToDo = { text, id, check: name as any, category };\r\n      return [\r\n        ...oldToDos.slice(0, targetIndex),\r\n        newToDo,\r\n        ...oldToDos.slice(targetIndex + 1),\r\n      ];\r\n    });\r\n  };\r\n  return (\r\n    <li\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <span style={{ fontSize: \"1.5em\" }}>{text}</span>\r\n      {check !== TodoCheck.TO_DO && (\r\n        <button name={TodoCheck.TO_DO} onClick={onClick}>\r\n          To Do\r\n        </button>\r\n      )}\r\n      {check !== TodoCheck.DOING && (\r\n        <button name={TodoCheck.DOING} onClick={onClick}>\r\n          Doing\r\n        </button>\r\n      )}\r\n\r\n      {check !== TodoCheck.DONE && (\r\n        <button name={TodoCheck.DONE} onClick={onClick}>\r\n          Done\r\n        </button>\r\n      )}\r\n      <span>{category === DefaultCategory ? \"\" : `#${category}`}</span>\r\n    </li>\r\n  );\r\n}\r\n","import { useRecoilValue } from \"recoil\";\r\nimport { toDoSelector } from \"../atoms\";\r\nimport SelectToDo from \"./SelectToDo\";\r\nimport CreateToDo from \"./CreateToDo\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nfunction ToDoList() {\r\n  const toDos = useRecoilValue(toDoSelector);\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        width: \"410px\",\r\n        margin: \"auto\",\r\n        height: \"900px\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <h1>To Dos</h1>\r\n      <hr />\r\n      <CreateToDo />\r\n      <SelectToDo />\r\n      <ul style={{ marginTop: \"7px\" }}>\r\n        {toDos?.map((toDo) => (\r\n          <ToDo key={toDo.id} {...toDo} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport ToDoList from \"./components/ToDoList\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  font-family: 'Titillium Web';\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Titillium Web', sans-serif;\r\n  background-color:${(props) => props.theme.bgColor};\r\n  color:${(props) => props.theme.textColor};\r\n  line-height: 1.2;\r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n\r\nh1{\r\n  font-size: 2em;\r\n}\r\ninput{\r\n  width: 100px;\r\n  margin-left : 10px;\r\n  border-radius: 10% / 30% ;\r\n  border:none ;\r\n}\r\n\r\nbutton{  \r\n  border: none;\r\n  border-radius: 10% / 20% ;\r\n  margin: 5px;\r\n  font-size: 15px;\r\n  color: ${(props) => props.theme.textColor};\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n}\r\n\r\n\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ToDoList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { darkTheme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"#406882\",\r\n};\r\n"],"sourceRoot":""}